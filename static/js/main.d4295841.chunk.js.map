{"version":3,"sources":["SignUpModal.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["SignUpModal","props","toggleModal","bind","handleSubmit","state","isModalOpen","values","firstname","lastname","telnum","email","actions","reset","this","setState","required","val","length","maxLength","len","minLength","className","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","name","placeholder","validators","show","messages","isNumber","isNaN","Number","validEmail","test","type","color","Component","InitialCustomerForm","store","createStore","combineReducers","createForms","customer","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4295841.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { Control, Form, Errors } from \"react-redux-form\";\nimport { postInfo } from './redux/ActionCreators';\nimport { actions } from \"react-redux-form\";\n\nclass SignUpModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      isModalOpen: false,\n    };\n  }\n\n  handleSubmit(values) {\n    postInfo(\n      values.firstname,\n      values.lastname,\n      values.telnum,\n      values.email,\n    )\n    actions.reset(\"customer\");\n    this.toggleModal();\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  render() {\n    const required = (val) => val && val.length;\n    const maxLength = (len) => (val) => !val || val.length <= len;\n    const minLength = (len) => (val) => val && val.length >= len;\n    const isNumber = (val) => !isNaN(Number(val));\n    const validEmail = (val) =>\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n    return (\n      <>\n        <div className=\"container\">\n          <Button className=\"button\" outline onClick={this.toggleModal}>Sign up\n          </Button>\n        </div>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Sign up</ModalHeader>\n          <ModalBody>\n            <Form\n              model=\"customer\"\n              onSubmit={(values) => this.handleSubmit(values)}\n            >\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={4}>\n                  First Name\n                </Label>\n                <Col md={8}>\n                  <Control.text\n                    model=\".firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={4}>\n                  Last Name\n                </Label>\n                <Col md={8}>\n                  <Control.text\n                    model=\".lastname\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={4}>\n                  Phone Number\n                </Label>\n                <Col md={8}>\n                  <Control.text\n                    model=\".telnum\"\n                    id=\"telnum\"\n                    name=\"telnum\"\n                    placeholder=\"Tel. Number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".telnum\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 numbers\",\n                      maxLength: \"Must be 15 numbers or less\",\n                      isNumber: \"Must be a number\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={4}>\n                  Email\n                </Label>\n                <Col md={8}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      validEmail: \"Invalid Email Address\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col>\n                  <Button type=\"submit\" color=\"primary\">\n                    Sign up\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default SignUpModal;","export const InitialCustomerForm = {\n  firstname: '',\n  lastname: '',\n  telnum: '',\n  email: '',\n};","import './App.css';\nimport SignUpModal from './SignUpModal';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App container\">\n        <SignUpModal />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { InitialCustomerForm } from './forms';\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      ...createForms({\n        customer: InitialCustomerForm\n      })\n    }),\n    applyMiddleware(thunk, logger)\n  );\n\n  return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}